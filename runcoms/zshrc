#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source Secrets.
if [[ -s "${ZDOTDIR:-$HOME}/.secrets" ]]; then
  source "${ZDOTDIR:-$HOME}/.secrets"
fi
# Customize to your needs...

if [[ -s "$HOME}/.iterm2_shell_integration.zsh" ]]; then
  source ~/.iterm2_shell_integration.zsh
fi

#############################################
############### Shell Config ################
#############################################
# HISTORY
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
#Don't share history across sessions
setopt append_history no_inc_append_history no_share_history

# Allow interactive comments with #
setopt interactivecomments

#############################################
################ John below  ################
#############################################

#export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/texbin:/usr/X11/bin:/usr/local/mysql/bin:/usr/local/go/bin:$HOME/Code/scripts:$PATH

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ]; then
  PATH="$HOME/bin:$PATH"
fi

# If ububtu snaps are in here add it to the PATH
if [ -d "/snap/bin" ]; then
  PATH="$PATH:/snap/bin"
fi

export EDITOR="code -w"
export VISUAL="$EDITOR"

# key bindings
# fix the delete key
#bindkey '^[[3~' delete-char
#bindkey '^[OM' accept-line

# Aliases
alias ll='ls -l'
alias la='ls -a'
alias sss='/System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine &'
alias xcode='open -a XCode'
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

# HackerRank
alias HR='~/Code/HackerRank'
alias HRB='~/Code/HackerRank/beaverd'
alias HRB2='~/Code/HackerRank/beaverd2'

#git
alias gd="git diff"
alias gdc="git diff --cached"

alias glg="git log --oneline --graph --decorate"
alias glgg="git log --graph --decorate"
alias glga="git log --graph --pretty=format:'%C(yellow)%h%Creset %C(bold blue)(%an)%Creset%C(yellow)%d%Creset %s %Cgreen<%cr, %ar>%Creset' --abbrev-commit --date=short"

alias glga="git log --graph --abbrev-commit --date=short --pretty=format:'%C(yellow)%h%Creset %C(bold blue)(%an)%Creset%C(yellow)%d%Creset %s %Cgreen<%cr, %ar>%Creset'"


alias gap="git add --patch"

alias gcn="git commit --no-edit"

# Kubernetes
alias k="kubectl"

# Personal Shortcuts
alias todos="ag -C0 '#\s*[A-Z]{3,}:'"

# Use gcc for CC. XCode 4.2 clang doesn't work with everything. Notably compiling some ruby gems
#export CC=gcc-4.2


#############################################
############## Helper Functions #############
#############################################
# curl helpers
curl_stat()
{
  local stat_def="
Results as of $(date):

Response:
  http_code:           %{http_code}
  content_type:        %{content_type}
  size_download_bytes: %{size_download}

Time:
  time_namelookup:     %{time_namelookup}
  time_connect:        %{time_connect}
  time_appconnect:     %{time_appconnect}
  time_pretransfer:    %{time_pretransfer}
  time_redirect:       %{time_redirect}
  time_starttransfer:  %{time_starttransfer}
  ---------------------------
  time_total:          %{time_total}
"
  curl -k -IL --write-out "$stat_def" --output /dev/null --silent "$@"
}

curl_follow_redirects()
{
  curl -IL --silent --write-out "%{url_effective}\n" --output /dev/null "$@"
}

ctags_rails()
{
  rm tags && ctags --exclude=.git --exclude=log --exclude='*.js' -R * $(bundle show --paths)
}

strip_shell_colors()
{
    perl -pe 's/\x1b\[[0-9;]*[mG]//g' "$@"
}

nvminit()
{
  export NVM_DIR="$HOME/.nvm"
  . "$(brew --prefix nvm)/nvm.sh"
}

jtnotes()
{
    e ~/Dropbox/Notes/jpt.org.gpg
}

mist()
{
    ssh -t "mist" "tmux new-session -s ssh_mist || tmux attach-session -t ssh_mist"
}

gpg_ssh_agent()
{
    gpg_agent_path=$(command -v gpg-agent)
    if [ -x "$gpg_agent_path" ]; then
        GPG_TTY=$(tty)
        SSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"
        export GPG_TTY SSH_AUTH_SOCK
        gpgconf --launch gpg-agent
        echo "UPDATESTARTUPTTY" | gpg-connect-agent /bye > /dev/null 2>&1
    fi
}

# Lazy load kubectl completion on first use
function kubectl() {
    if ! type __start_kubectl >/dev/null 2>&1; then
        source <(command kubectl completion zsh)
    fi

    command kubectl "$@"
}

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

return 0
